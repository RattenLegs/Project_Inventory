<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- DispatcherServlet 관련 설정. -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 핸들러 어댑터, 핸들러 매핑 객체가 
	개발자가 작성한 컨트롤러 등을 찾을 수 있게 설정하는 태그. -->
	<!-- 자동으로 컨트롤러와 매핑 메서드 탐색 (핸들러 매핑, 핸들러 어댑터 빈 등록) -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<!-- 리소스 추가 -->
		<!-- 정적 자원(html, css, js, img... 등)을 절대 경로로 쉽게 맵핑해 주는 태그
		mapping에 작성된 경로: 외부로 노출되는 경로, location: 실제 파일의 경로 -->
	<!-- img부터 시작하면 실제 경로는 resources 안의 img 검색하게됨 -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 뷰 리졸버 빈 등록 설정. -->
	<!-- 
		- 컨트롤러가 리턴한 view 문자열을 해석하여 경로를 만들어서
		 파일을 찾아 응답하는 ViewResolver의 빈 등록 코드.
		- prefix, suffix 필드의 setter 주입을 통해
		컨트롤러에서 리턴된 문자열을 조립해 줍니다.
	 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
		<!-- 
		아노테이션으로 등록된 클래스 객체들을 탐색해주는 설정 태그
		base-package에 탐색할 패키지 경로를 쓰면
		하위 패키지까지 몽땅 검색해줍니다.
	 -->
	
	<context:component-scan base-package="com.myProject" />
	
	
	
</beans:beans>
