<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 21 Mar 2023 14:58:23 GMT</lastBuildDate><item><title><![CDATA[Spring Data JPA introduces query parser!]]></title><link>https://spring.io/blog/2023/03/21/spring-data-jpa-introduces-query-parser</link><guid isPermaLink="true">https://spring.io/blog/2023/03/21/spring-data-jpa-introduces-query-parser</guid><dc:creator><![CDATA[Greg L. Turnquist]]></dc:creator><pubDate>Tue, 21 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;One of Spring Data JPA¡¯s handy features is letting you plugin in custom JPA queries through its &lt;code&gt;@Query&lt;/code&gt; annotation.&lt;/p&gt;
&lt;p&gt;This allows some flexiblity because you are still able to offer sort parameters to the consumers of your app. Check out the example below:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;interface SampleRepository extends CrudRepository&amp;#x3C;Employee, Long&gt; {

    @Query(&quot;select e from Employee e where e.firstName = :firstName&quot;)
    List&amp;#x3C;Employee&gt; findCustomEmployees(String firstName, Sort sort);

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Spring Data JPA will turn this custom query into a JPA query when provided not just with a criteria (&lt;code&gt;firstName&lt;/code&gt;) but also a custom sort via &lt;code&gt;findCustomEmployees(&quot;Alice&quot;, Sort.by(&quot;lastName&quot;))&lt;/code&gt;, into the following fully fledged query:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-jpql&quot;&gt;select e
from Employee e
where e.firstName = :firstName
order by e.lastName
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On top of that, Spring Data JPA supports paging, which requires the ability to count result sets.&lt;/p&gt;
&lt;p&gt;In the past, with more and more complex queries, our ability to &quot;do the right thing&quot; and apply &quot;order by&quot; clauses that properly point to the primary SELECT clause&apos;s alias value has been challenging to say the least.&lt;/p&gt;
&lt;p&gt;It is also tricky to wrap the projection with a proper &lt;code&gt;count()&lt;/code&gt; function. Imagine doing this when there subqueries, case statements, and other deep queries!&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;We are excited to announce the release of both HQL and JPQL parsers, which will make it easier for you to customize queries in your Spring Data JPA applications.&lt;/p&gt;
&lt;p&gt;Using both the JPA and Hibernate specifications, we have developed ANTLR-based query parsing engines and use them to more properly apply the customizations needed to serve you.&lt;/p&gt;
&lt;p&gt;Not only can we spot the &quot;right place&quot; to put that &lt;code&gt;count()&lt;/code&gt; function and also harvest the primary &lt;code&gt;FROM&lt;/code&gt; expression&apos;s alias, it becomes possible to detect semantic situations.&lt;/p&gt;
&lt;p&gt;With a query parser, it is much easier spot valid vs. invalid queries. Sometimes, we spend MORE time working out whether a query is even correct before figuring out how to handle it properly.&lt;/p&gt;
&lt;h2&gt;How do I use it?&lt;/h2&gt;
&lt;p&gt;Good news...it&apos;s automatically applied.&lt;/p&gt;
&lt;p&gt;When using the &lt;code&gt;@Query&lt;/code&gt; annotation, there is a key parameter: &lt;code&gt;isNative&lt;/code&gt;. This boolean flag lets you signal whether you are writing native SQL (&lt;code&gt;isNative=true&lt;/code&gt;) or a JPA query (&lt;code&gt;isNative=false&lt;/code&gt; by default).&lt;/p&gt;
&lt;p&gt;If you have a JPA query (&lt;code&gt;isNative=false&lt;/code&gt;) and Hibernate is on the classpath, it will use our new HQL parser. If Hibernate is NOT on the classpath, it will fallback to the somewhat limited JPQL parser. (Limited by specification, not our implementation.)&lt;/p&gt;
&lt;p&gt;And thus, all you must do is either pick up our latest snapshot release of the Spring Data release train (Spring Data 3.1 snapshots) or pick up the next milestone release of Spring Boot.&lt;/p&gt;
&lt;h2&gt;What&apos;s next?&lt;/h2&gt;
&lt;p&gt;There are more features to add. For example, it&apos;s possible to have more complex aliasing, such as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select AVG(e.timeToCloseTickets) as avg
from Employee e
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This type of query when you apply a &lt;code&gt;Sort.by(&quot;avg&quot;)&lt;/code&gt; should NOT yield an &lt;code&gt;order by e.avg&lt;/code&gt;, but instead simply &lt;code&gt;order by avg&lt;/code&gt;. There are other scenarios we are looking into adding support. But with these query parsers in place, it becomes much easier to support these situations.&lt;/p&gt;
&lt;p&gt;We also have a backlog of tickets related to query parsing that we can now work through.&lt;/p&gt;
&lt;h2&gt;BONUS&lt;/h2&gt;
&lt;p&gt;As a bonus, if you are wanting to pre-check our own custom queries, it&apos;s possible with today&apos;s tooling to get a peek.&lt;/p&gt;
&lt;p&gt;If you use IntelliJ IDEA, there is an ANTLR plugin (&lt;a href=&quot;https://plugins.jetbrains.com/plugin/7358-antlr-v4&quot;&gt;https://plugins.jetbrains.com/plugin/7358-antlr-v4&lt;/a&gt;) that when installed, lets you run any ANTLR grammar file and test against it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install IntelliJ IDEA&apos;s ANTLR plugin.&lt;/li&gt;
&lt;li&gt;Clone Spring Data JPA&apos;s source repository.&lt;/li&gt;
&lt;li&gt;Find &lt;code&gt;src/main/antlr4/org/springframework/data/jpa/repository/query/Hql.g4&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Right-click &quot;start&quot; and select &quot;Test rule start&quot;&lt;/li&gt;
&lt;li&gt;Enter your query in the box on the left, and check out the AST in the window pane on the right.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;//images.ctfassets.net/mnrwi97vnhts/0zDuzH6dOb6AdLTFR38Ta/5b6fcb32a78549d12d965d070e848868/Screen_Shot_2023-03-14_at_11.08.01_AM.png&quot; alt=&quot;IntelliJ IDEA with ANTLR plugin showing a query&quot;&gt;&lt;/p&gt;
&lt;p&gt;(We recently asked for people to send in their craziest JPA queries and this is one of them. At a glance, the query is valid and you can even zoom in to see more of it.)&lt;/p&gt;
&lt;p&gt;Cheers,
--Greg Turnquist&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring for GraphQL 1.0.4 and 1.1.3 released]]></title><link>https://spring.io/blog/2023/03/21/spring-for-graphql-1-0-4-and-1-1-3-released</link><guid isPermaLink="true">https://spring.io/blog/2023/03/21/spring-for-graphql-1-0-4-and-1-1-3-released</guid><dc:creator><![CDATA[Brian Clozel]]></dc:creator><pubDate>Tue, 21 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I&apos;m pleased to announce that the Spring for GraphQL 1.0.4 and 1.1.3 maintenance versions are now available on Maven Central.&lt;/p&gt;
&lt;p&gt;Spring for GraphQL 1.0.4 includes &lt;a href=&quot;https://github.com/spring-projects/spring-graphql/releases/tag/v1.0.4&quot;&gt;6 fixes and documentation improvements&lt;/a&gt;. This version will be shipped with Spring Boot 2.7.10, &lt;a href=&quot;https://calendar.spring.io/&quot;&gt;to be released this Thursday&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Spring for GraphQL 1.1.3 includes &lt;a href=&quot;https://github.com/spring-projects/spring-graphql/releases/tag/v1.1.3&quot;&gt;12 fixes and documentation improvements&lt;/a&gt;. This version will be shipped with Spring Boot 3.0.5, &lt;a href=&quot;https://calendar.spring.io/&quot;&gt;to be released this Thursday&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you have general questions, please ask on &lt;a href=&quot;https://stackoverflow.com&quot;&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href=&quot;https://stackoverflow.com/tags/spring-graphql&quot;&gt;&lt;code&gt;spring-graphql&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-graphql/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-graphql&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-graphql/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-graphql/docs/1.1.3/reference/html&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-graphql&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Vault 3.0.2 and 2.3.3 fix CVE-2023-20859]]></title><link>https://spring.io/blog/2023/03/20/spring-vault-3-0-2-and-2-3-3-fix-cve-2023-20859</link><guid isPermaLink="true">https://spring.io/blog/2023/03/20/spring-vault-3-0-2-and-2-3-3-fix-cve-2023-20859</guid><dc:creator><![CDATA[Mark Paluch]]></dc:creator><pubDate>Mon, 20 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that the Spring Vault &lt;code&gt;3.0.2&lt;/code&gt; and &lt;code&gt;2.3.3&lt;/code&gt; versions are available now.&lt;/p&gt;
&lt;p&gt;Spring Vault &lt;code&gt;3.0.2&lt;/code&gt; ships with &lt;a href=&quot;https://github.com/spring-projects/spring-vault/releases/tag/3.0.2&quot;&gt;7 fixes and documentation improvements&lt;/a&gt; Spring Vault 2.3.3 ships with &lt;a href=&quot;https://github.com/spring-projects/spring-vault/releases/tag/2.3.3&quot;&gt;13 fixes and selected improvements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Those versions fix the following CVE:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/security/cve-2023-20859&quot;&gt;CVE-2023-20859&lt;/a&gt;: Insertion of Sensitive Information into Log Sourced from Failed Revocation of Tokens&lt;/p&gt;
&lt;p&gt;Those versions will be shipped with Spring Cloud in the next days. Until then, please override the dependency version in your project.&lt;/p&gt;
&lt;p&gt;For Gradle builds in &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;implementation &apos;org.springframework.vault:spring-vault-core:3.0.2&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or for Maven builds in &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#x3C;dependency&gt;
    &amp;#x3C;groupId&gt;org.springframework.vault&amp;#x3C;/groupId&gt;
    &amp;#x3C;artifactId&gt;spring-vault-core&amp;#x3C;/artifactId&gt;
    &amp;#x3C;version&gt;3.0.2&amp;#x3C;/version&gt;
&amp;#x3C;/dependency&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://projects.spring.io/spring-vault/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-vault&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-vault/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-vault/docs/3.0.2/reference/html/&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Data 2023.0-M1 and Service Release 2022.0.4 & 2021.2.10 released ]]></title><link>https://spring.io/blog/2023/03/20/spring-data-2023-0-m1-and-service-release-2022-0-4-and-2021-2-10-released</link><guid isPermaLink="true">https://spring.io/blog/2023/03/20/spring-data-2023-0-m1-and-service-release-2022-0-4-and-2021-2-10-released</guid><dc:creator><![CDATA[Christoph Strobl]]></dc:creator><pubDate>Mon, 20 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team, I¡¯m pleased to announce the availability of the 3rd Milestone of the Spring Data 2023.0 release train as well as service releaes 2022.0.4 &amp;#x26; 2021.2.10. These releases ship with improvements, including fixes for regressions.&lt;/p&gt;
&lt;p&gt;The upcoming Spring Boot 3.0.5 and 2.7.10 releases are going to pick up the service releases for your convenience.&lt;/p&gt;
&lt;p&gt;New features included in 2023.0.0 Milestone 3 are amongst others:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new scroll API to support offset and key based pagination&lt;/li&gt;
&lt;li&gt;Improvements in JPA query parsing for HQL and JPQL&lt;/li&gt;
&lt;li&gt;Support for MongoDB&apos;s explicit field level encryption&lt;/li&gt;
&lt;li&gt;Aggregate reference request parameters in Data REST&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please find more information about new features in our &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2023.0-%28Ullman%29-Release-Notes&quot;&gt;Release Notes&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;2023.0.0-M3&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spring Data Commons &lt;code&gt;3.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-commons/3.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/3.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/3.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/releases/tag/3.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data JPA &lt;code&gt;3.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-jpa/3.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/3.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/3.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-jpa/releases/tag/3.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data KeyValue &lt;code&gt;3.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-keyvalue/3.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/3.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/3.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-keyvalue/releases/tag/3.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;4.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-cassandra/4.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/4.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/4.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-cassandra/releases/tag/4.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j &lt;code&gt;7.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-neo4j/7.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/7.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/7.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-neo4j/releases/tag/7.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB &lt;code&gt;4.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-mongodb/4.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/4.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/4.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/releases/tag/4.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data LDAP &lt;code&gt;3.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-ldap/3.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/3.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/3.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-ldap/releases/tag/3.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data REST &lt;code&gt;4.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-rest-webmvc/4.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/4.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/4.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/releases/tag/4.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Redis &lt;code&gt;3.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-redis/3.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/3.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/3.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-redis/releases/tag/3.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch &lt;code&gt;5.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-elasticsearch/5.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/5.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/5.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/5.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase &lt;code&gt;5.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-couchbase/5.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/5.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/5.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-couchbase/releases/tag/5.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Relational &lt;code&gt;3.1 M3&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-relational/3.1.0-M3&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/3.1.0-M3/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/3.1.0-M3/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-relational/releases/tag/3.1.0-M3&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2022.0.4&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spring Data Commons &lt;code&gt;3.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/3.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/3.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/3.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/releases/tag/3.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data JPA &lt;code&gt;3.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/3.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/3.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/3.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-jpa/releases/tag/3.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data KeyValue &lt;code&gt;3.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/3.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/3.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/3.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-keyvalue/releases/tag/3.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;4.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/4.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/4.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/4.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-cassandra/releases/tag/4.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j &lt;code&gt;7.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/7.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/7.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/7.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-neo4j/releases/tag/7.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB &lt;code&gt;4.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/4.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/4.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/4.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/releases/tag/4.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data LDAP &lt;code&gt;3.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/3.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/3.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/3.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-ldap/releases/tag/3.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data REST &lt;code&gt;4.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/4.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/4.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/4.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/releases/tag/4.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Redis &lt;code&gt;3.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/3.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/3.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/3.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-redis/releases/tag/3.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch &lt;code&gt;5.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/5.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/5.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/5.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/5.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase &lt;code&gt;5.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/5.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/5.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/5.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-couchbase/releases/tag/5.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Relational &lt;code&gt;3.0.4&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-relational/3.0.4&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/3.0.4/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/3.0.4/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-relational/releases/tag/3.0.4&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2021.2.10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spring Data Commons &lt;code&gt;2.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/2.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/commons/docs/2.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/releases/tag/2.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data JDBC &lt;code&gt;2.4.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.4.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/2.4.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jdbc/docs/2.4.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-relational/releases/tag/2.4.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data JPA &lt;code&gt;2.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/2.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/2.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-jpa/releases/tag/2.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data KeyValue &lt;code&gt;2.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/2.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/keyvalue/docs/2.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-keyvalue/releases/tag/2.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data for Apache Cassandra &lt;code&gt;3.4.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.4.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/3.4.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/cassandra/docs/3.4.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-cassandra/releases/tag/3.4.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j &lt;code&gt;6.3.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/6.3.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/6.3.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/neo4j/docs/6.3.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-neo4j/releases/tag/6.3.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB &lt;code&gt;3.4.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.4.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/3.4.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/mongodb/docs/3.4.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/releases/tag/3.4.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data R2DBC &lt;code&gt;1.5.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.5.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/r2dbc/docs/1.5.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/r2dbc/docs/1.5.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-r2dbc/releases/tag/1.5.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data for Apache Geode &lt;code&gt;2.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/geode/docs/2.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/geode/docs/2.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-geode/releases/tag/2.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data LDAP &lt;code&gt;2.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/2.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/ldap/docs/2.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-ldap/releases/tag/2.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Envers &lt;code&gt;2.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/envers/docs/2.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/envers/docs/2.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-envers/releases/tag/2.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data REST &lt;code&gt;3.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/3.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/rest/docs/3.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/releases/tag/3.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Redis &lt;code&gt;2.7.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.7.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/2.7.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/redis/docs/2.7.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-redis/releases/tag/2.7.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch &lt;code&gt;4.4.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.4.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/4.4.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/elasticsearch/docs/4.4.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/4.4.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase &lt;code&gt;4.4.10&lt;/code&gt; - &lt;a href=&quot;https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.4.10&quot;&gt;Artifacts&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/4.4.10/api/&quot;&gt;Javadoc&lt;/a&gt; - &lt;a href=&quot;https://docs.spring.io/spring-data/couchbase/docs/4.4.10/reference/html/&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/spring-projects/spring-data-couchbase/releases/tag/4.4.10&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring Framework 5.2.23 fixes cve-2023-20861]]></title><link>https://spring.io/blog/2023/03/20/spring-framework-5-2-23-fixes-cve-2023-20861</link><guid isPermaLink="true">https://spring.io/blog/2023/03/20/spring-framework-5-2-23-fixes-cve-2023-20861</guid><dc:creator><![CDATA[Brian Clozel]]></dc:creator><pubDate>Mon, 20 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team, I am pleased to announce that Spring Framework &lt;code&gt;5.2.23.RELEASE&lt;/code&gt; is available now. This release has been requested by &lt;a href=&quot;https://spring.io/projects/spring-framework#support&quot;&gt;Spring Framework commercial support&lt;/a&gt; customers and is available on Maven Central.&lt;/p&gt;
&lt;p&gt;Spring Framework &lt;code&gt;5.2.23.RELEASE&lt;/code&gt; ships with &lt;a href=&quot;https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE&quot;&gt;3 fixes&lt;/a&gt;, including a fix for the following CVE:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/security/cve-2023-20861&quot;&gt;cve-2023-20861: Spring Expression DoS Vulnerability&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5.2.22.RELEASE&lt;/code&gt; was not vulnerable to &lt;a href=&quot;https://spring.io/security/cve-2023-20860&quot;&gt;cve-2023-20860&lt;/a&gt;, so no fix was required.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This version will not be shipped with a Spring Boot release as &lt;code&gt;2.3.x&lt;/code&gt; &lt;a href=&quot;https://spring.io/projects/spring-boot#support&quot;&gt;is out of commercial support&lt;/a&gt;. You can manually upgrade Spring Framework in your Spring Boot &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.3.12.RELEASE/maven-plugin/reference/html/#using-import&quot;&gt;Maven&lt;/a&gt; or &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.3.12.RELEASE/gradle-plugin/reference/html/#managing-dependencies-dependency-management-plugin-customizing&quot;&gt;Gradle&lt;/a&gt; builds. Upgrading to a supported Spring Boot version is strongly advised.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://projects.spring.io/spring-framework/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-framework&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-framework/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/5.2.23.RELEASE/spring-framework-reference/&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Framework 6.0.7 and 5.3.26 fix cve-2023-20860 and cve-2023-20861]]></title><link>https://spring.io/blog/2023/03/20/spring-framework-6-0-7-and-5-3-26-fix-cve-2023-20860-and-cve-2023-20861</link><guid isPermaLink="true">https://spring.io/blog/2023/03/20/spring-framework-6-0-7-and-5-3-26-fix-cve-2023-20860-and-cve-2023-20861</guid><dc:creator><![CDATA[Brian Clozel]]></dc:creator><pubDate>Mon, 20 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that the Spring Framework &lt;code&gt;6.0.7&lt;/code&gt; and &lt;code&gt;5.3.26&lt;/code&gt; versions are available now.&lt;/p&gt;
&lt;p&gt;Spring Framework &lt;code&gt;6.0.7&lt;/code&gt; ships with &lt;a href=&quot;https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7&quot;&gt;28 fixes and documentation improvements&lt;/a&gt;, including &lt;a href=&quot;https://github.com/spring-projects/spring-framework/issues?q=is%3Aclosed+milestone%3A6.0.7+label%3A%22type%3A+regression%22&quot;&gt;2 fixes for regressions&lt;/a&gt;. Spring Framework &lt;code&gt;5.3.26&lt;/code&gt; ships with &lt;a href=&quot;https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26&quot;&gt;40 fixes and documentation improvements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Those versions fix the following CVEs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/security/cve-2023-20860&quot;&gt;cve-2023-20860: Security Bypass With Un-Prefixed Double Wildcard Pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/security/cve-2023-20861&quot;&gt;cve-2023-20861: Spring Expression DoS Vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Those versions will be shipped with Spring Boot &lt;code&gt;3.0.5&lt;/code&gt; and &lt;code&gt;2.7.10&lt;/code&gt;, &lt;a href=&quot;https://calendar.spring.io/&quot;&gt;to be released Thursday&lt;/a&gt;. In the meantime, you can update your existing Spring Boot application to pick up the latest Framework version.&lt;/p&gt;
&lt;p&gt;For Gradle builds in &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;ext[&apos;spring-framework.version&apos;] = &apos;6.0.7&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or for Maven builds in &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;properties&gt;
  &amp;#x3C;spring-framework.version&gt;6.0.7&amp;#x3C;/spring-framework.version&gt;
&amp;#x3C;/properties&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://projects.spring.io/spring-framework/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-framework&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-framework/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/6.0.7/reference/html/&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Tips: Vaadin Flow and Spring Boot 3]]></title><link>https://spring.io/blog/2023/03/20/spring-tips-vaadin-flow-and-spring-boot-3</link><guid isPermaLink="true">https://spring.io/blog/2023/03/20/spring-tips-vaadin-flow-and-spring-boot-3</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Mon, 20 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In this installment, we&apos;ll look at the fantastic Vaadin Flow library, which has recently been updated for Spring Boot 3, and how it can help you be happier.&lt;/p&gt;
&lt;p&gt;the code is available, as usual, &lt;a href=&quot;https://github.com/spring-tips/vaadin-flow-24&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;this episode features special guest &lt;a href=&quot;https://twitter.com/marcushellberg&quot;&gt;Marcus Hellberg&lt;/a&gt;, VP developer relations from Vaadin, and my colleague &lt;a href=&quot;https://twitter.com/tiffanyfayj&quot;&gt;Tiffany Jernigan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NO DEVELOPER ADVOCATES WERE HARMED IN THE MAKING OF THIS VIDEO&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/nyR-qzj7O3w&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Kotlin DSLs in the world of Springdom]]></title><link>https://spring.io/blog/2023/03/16/kotlin-dsls-in-the-world-of-springdom</link><guid isPermaLink="true">https://spring.io/blog/2023/03/16/kotlin-dsls-in-the-world-of-springdom</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Fri, 17 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Kotlin is a beautiful language that makes it trivial to take old Java libraries and make them much more concise, just by virtue of the Kotlin syntax itself. It shines, however, when you write DSLs.&lt;/p&gt;
&lt;p&gt;Here&apos;s some inside baseball for you: the Spring teams do their level-headed best to be cohesive, to align on core themes, and to make Spring better than the sum of its parts. You see this in every major release: XML namespaces in Spring Framework 2.0. Java Config in 3.0. Conditionals and autoconfiguration when Spring Boot 1.0 first shipped alongside Spring Framework 4.0. Reactive programming with Spring Framework 5.0. And, of course, ahead-of-time compilation in Spring Framework 6.0. And whenever the baseline revisions of platform specifications like Java or Jakarta EE change, so do the minimums for all the projects building on the corresponding Spring Framework release. But not with Kotlin. It&apos;s one of those things that grew organically. There was no mandate from on high. It started in Spring Framework, and different teams, when they saw the opportunity, added appropriate support to their respective projects when they could, often in tandem with the community. Kotlin&apos;s awesome.&lt;/p&gt;
&lt;p&gt;Kotlin has several features that make it easy to build DSLs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;functions that accept lambdsa can accept the lambas &lt;em&gt;outside&lt;/em&gt; of the parenthesis for the funciton invocation&apos;&lt;/li&gt;
&lt;li&gt;if the only argument expected for the function happens to be a lambda, there&apos;s no need to specify the parenthesis at all&lt;/li&gt;
&lt;li&gt;DSLs may be written so that the &lt;code&gt;this&lt;/code&gt; reference-the &lt;em&gt;reciever&lt;/em&gt;-of the lambda can point to an arbitrary context object of the framework&apos;s choosing. So rather than having all DSLs look like this: &lt;code&gt;{ context -&gt; context.a() } &lt;/code&gt; we can instead just write &lt;code&gt;{ a() }&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;extension functions are a typesafe way to add new functions to existing types without changing the source code for those types. This means types that work one way in Java can have alternative extended behavior in Kotlin.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this blog, I want to introduce some examples of DSLs across the wide and wonderful world of Springdom, highlighting some (but not all!) of my favorite DSLs.  The code for all these examples and the corresponding Kotlin-language Gradle build files &lt;a href=&quot;https://github.com/coffee-software-show/lets-code-kotlin&quot;&gt;is here&lt;/a&gt; if you want to follow along at home. Inspect the &lt;code&gt;dsls&lt;/code&gt; folder for the examples we&apos;ll look at in this blog.&lt;/p&gt;
&lt;p&gt;Let&apos;s dive right in.&lt;/p&gt;
&lt;h2&gt;Spring Framework Functional Bean Registrations&lt;/h2&gt;
&lt;p&gt;We introduced functional bean registration in Spring Framework 5.0 way back in 2017.  It&apos;s a way to programmatically register beans with the Spring Framework in an &lt;code&gt;ApplicationContextInitializer&lt;/code&gt;. It sidesteps some of the reflection and component scanning required for Javca configuration. We quite like the approach, and indeed, when you use Spring&apos;s GraalVM native image support, we &lt;em&gt;transpile&lt;/em&gt;, sort of, your &lt;code&gt;@Configuration&lt;/code&gt; Java configuration classes into functional bean registrations before feeding the whole thing to the GraalVM native image compiler. It&apos;s a nice DSL, but I love how it pulls together when using Kotlin. I don&apos;t have a standalone example of this in the sample code, but in most of the examples, I use the functional style, so I want to get it out of the way:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;package com.example.beans

import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.context.support.beans
import org.springframework.web.servlet.function.ServerResponse
import org.springframework.web.servlet.function.router

@SpringBootApplication
class FunctionalBeanRegistrationApplication

fun main(args: Array&amp;#x3C;String&gt;) {
    runApplication&amp;#x3C;FunctionalBeanRegistrationApplication&gt;(*args) {
        addInitializers(beans {
            bean {
            	val db = ref&amp;#x3C;javax.sql.DataSource&gt;()
                CustomerService(db)
            }
        })
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are a few other niceties there, too: notice that when using Spring Boot, you&apos;re not using the normal &lt;code&gt;SpringApplication.run(Class, String[] args)&lt;/code&gt;, but instead, use &lt;code&gt;runApplication&lt;/code&gt;. The last parameter of &lt;code&gt;runApplication&lt;/code&gt; is a lambda that has as its receiver a reference to the &lt;code&gt;GenericApplicationContext&lt;/code&gt; that gets created when calling &lt;code&gt;SpringApplication#run&lt;/code&gt;. This gives us a chance to post-process the &lt;code&gt;GenericApplicationContext&lt;/code&gt; and to call  &lt;code&gt;addInitializers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then, we use the convenient &lt;code&gt;beans&lt;/code&gt; DSL, rather than writing an implementation of &lt;code&gt;ApplicationContextInitializer&amp;#x3C;GenericApplicationContext&gt;&lt;/code&gt; ourselves.&lt;/p&gt;
&lt;p&gt;We can also use the &lt;code&gt;ref&lt;/code&gt; method and the reified generics for the bean type to look up and inject another bean (of type &lt;code&gt;javax.sql.DataSource&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Remember that Spring doesn&apos;t care how you furnish your bean definitions: use XML, Java Configuration, component scanning, functional bean registration, etc., and Spring is happy either way. Of course, you can also see all of them in the sample application from Java or Kotlin. But, again, it doesn&apos;t matter: they all end up as canonicalized &lt;code&gt;BeanDefinition&lt;/code&gt;s that then get wired together to form the final, running application. So you can mix and match. I often do!&lt;/p&gt;
&lt;h2&gt;Functional HTTP Endpoints with Spring MVC and Spring Webflux&lt;/h2&gt;
&lt;p&gt;Everybody knows Spring&apos;s &lt;code&gt;@Controller&lt;/code&gt; abstraction. Still, many other frameworks support an alternative syntax, a la Ruby&apos;s Sinatra, where a lambda is associated with a predicate describing how to match an incoming request. Spring finally got one in Spring Framework 5. The DSL in Java is concise but even more admirable in Kotlin. This functional endpoint style is implemented for both Spring MVC &lt;em&gt;and&lt;/em&gt; Sprihng Webflux. However, the MVC implementation came later, so some folks may not have tried it out yet.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;package com.example.fnmvc

import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.context.support.beans
import org.springframework.web.servlet.function.ServerResponse
import org.springframework.web.servlet.function.router

@SpringBootApplication
class FnMvcApplication

fun main(args: Array&amp;#x3C;String&gt;) {
    runApplication&amp;#x3C;FnMvcApplication&gt;(*args) {
        addInitializers(beans {
            bean {
                router {
                    GET(&quot;/hello&quot;) {
                        ServerResponse.ok().body(mapOf(&quot;greeting&quot; to &quot;Hello, world!&quot;))
                    }
                }
            }
        })
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty straightforward: when an HTTP &lt;code&gt;GET&lt;/code&gt; request arrives, produce a response, which in this case is a &lt;code&gt;Map&amp;#x3C;String, String&gt;&lt;/code&gt;. Spring MVC will, in turn, serialize that, just as if you had returned a &lt;code&gt;Map&amp;#x3C;String, String&gt;&lt;/code&gt; from a Spring MVC &lt;code&gt;@Controller&lt;/code&gt; handler method. Nice!&lt;/p&gt;
&lt;h2&gt;Corouitines&lt;/h2&gt;
&lt;p&gt;Coroutines are one of the most powerful ways to describe scalable, concurrent code in Kotklin without muddying the code with chains of invocations (? la Promises in Javascript or &lt;code&gt;Publisher&amp;#x3C;T&gt;s&lt;/code&gt; in Reactor), or callbacks, or the like. If you&apos;re using the reactive stack in Spring, then you&apos;re already set to use coroutines, as we&apos;ve worked to make it so that everywhere you would&apos;ve used a reactive type can also be &lt;code&gt;await-ed&lt;/code&gt;. You just need to see it to believe it:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;package bootiful.reactive

import kotlinx.coroutines.flow.Flow
import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.context.support.beans
import org.springframework.data.annotation.Id
import org.springframework.data.repository.kotlin.CoroutineCrudRepository
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.RestController
import org.springframework.web.reactive.function.server.ServerResponse
import org.springframework.web.reactive.function.server.bodyAndAwait
import org.springframework.web.reactive.function.server.coRouter

@SpringBootApplication
class ReactiveApplication

fun main(args: Array&amp;#x3C;String&gt;) {
    runApplication&amp;#x3C;ReactiveApplication&gt;(*args) {
        addInitializers(beans {
            bean {
                val repo = ref&amp;#x3C;CustomerRepository&gt;()
                coRouter {
                    GET(&quot;/customers&quot;) {
                        val customers : Flow&amp;#x3C;Customer&gt; = repo.findAll()
                        ServerResponse.ok().bodyAndAwait(customers)
                    }
                }
            }
        })
    }
}

@RestController
class CustomerHttpController(private val repo: CustomerRepository) {

    @GetMapping(&quot;/customers/{id}&quot;)
    suspend fun customersById(@PathVariable id: Int): Customer {
        val customer:Customer = this.repo.findById(id) !!
        println(&quot;the id is ${customer.id} and the name is ${customer.name}&quot;)
        return customer
    }
}

data class Customer(@Id val id: Int, val name: String)

interface CustomerRepository : CoroutineCrudRepository&amp;#x3C;Customer, Int&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The code looks pretty straightforward, I hope, but behind the scenes, the library and the Kotlin runtime are doing a special kind of sorcery that means that, while there is no data available from the sockets returning the data requested from the http server or the underlying database, the thread that was reading that data isn&apos;t waiting for it. The thread is free for reuse in the rest of the stack, granting much greater scalability. All we had to do was switch to &lt;code&gt;CoroutineCrudRepository&lt;/code&gt; and - if doing functional HTP endpoints - make sure we have switched on the &lt;code&gt;coRouter&lt;/code&gt; instead of &lt;code&gt;router&lt;/code&gt;. Magic. Delicious magic. But magic, nonetheless. &quot;I can&apos;t believe it&apos;s not blocking imperative inefficient code!&quot;  -Fabio&lt;/p&gt;
&lt;h2&gt;Spring Security&lt;/h2&gt;
&lt;p&gt;This example looks at the custom Spring Security DSL.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;package com.example.security

import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.context.support.beans
import org.springframework.security.config.annotation.web.builders.HttpSecurity
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity
import org.springframework.security.config.annotation.web.invoke
import org.springframework.security.core.userdetails.User
import org.springframework.security.provisioning.InMemoryUserDetailsManager
import org.springframework.web.servlet.function.ServerResponse
import org.springframework.web.servlet.function.router

@SpringBootApplication
@EnableWebSecurity
class SecurityApplication

fun main(args: Array&amp;#x3C;String&gt;) {
    runApplication&amp;#x3C;SecurityApplication&gt;(*args) {
        addInitializers(beans {
            bean {
                val http = ref&amp;#x3C;HttpSecurity&gt;()
                http {
                    httpBasic {}
                    authorizeRequests {
                        authorize(&quot;/hello/**&quot;, hasAuthority(&quot;ROLE_ADMIN&quot;))
                    }
                }
                .run { http.build() }
            }

            bean {
                InMemoryUserDetailsManager(
                    User.withDefaultPasswordEncoder()
                        .username(&quot;user&quot;)
                        .password(&quot;password&quot;)
                        .roles(&quot;ADMIN&quot;)
                        .build()
                )
            }

            bean {
                router {
                    GET(&quot;/hello&quot;) {
                        ServerResponse.ok().body(mapOf(&quot;greeting&quot; to &quot;Hello, world!&quot;))
                    }
                }
            }
        })
    }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The example uses functional bean registration. Most of this is familiar. What may be novel is the fact that we&apos;re using the injected &lt;code&gt;HttpSecurity&lt;/code&gt; reference and implicitly calling an extension method, &lt;code&gt;invoke&lt;/code&gt;, that gives us a DSL in which we can configure things like the fact that we want HTTP BASIC, we want to authorize specific endpoints, etc. We&apos;re defining a bean, so we need to return a value.&lt;/p&gt;
&lt;p&gt;Very convenient!&lt;/p&gt;
&lt;h2&gt;Spring Data MongoDB Type Safe Queries&lt;/h2&gt;
&lt;p&gt;Countless third-party data access libraries ship with an annotation processor that performs code generation so that you can access your domain model in a typesafe fashion, with checks guaranteed by the compiler. In Kotlin, it is possible to do much of that without an extra tool beyond the Kotlin compiler and language.&lt;/p&gt;
&lt;p&gt;Here&apos;s a simple example that writes some data to the database, then queries it using Kotlin&apos;s field reference mechanism:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;package com.example.mongodb

import org.springframework.boot.ApplicationRunner
import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.data.annotation.Id
import org.springframework.data.mongodb.core.MongoOperations
import org.springframework.data.mongodb.core.find
import org.springframework.data.mongodb.core.query.Query
import org.springframework.data.mongodb.core.query.isEqualTo
import org.springframework.data.repository.CrudRepository

@SpringBootApplication
class MongodbApplication

fun main(args: Array&amp;#x3C;String&gt;) {
    runApplication&amp;#x3C;MongodbApplication&gt;(*args)
}

@Configuration
class TypeSafeQueryExampleConfiguration {

    @Bean
    fun runner(cr: CustomerRepository, mongoOperations: MongoOperations) = ApplicationRunner {
        cr.deleteAll()
        cr.save(Customer(null, &quot;A&quot;))
        cr.save(Customer(null, &quot;B&quot;))
        cr.findAll().forEach {
            println(it)
        }
        val customers: List&amp;#x3C;Customer&gt; = mongoOperations.find&amp;#x3C;Customer&gt;(
            Query(Customer::name isEqualTo &quot;B&quot;)
        )
        println(customers)
    }
}

data class Customer(@Id val id: String?, val name: String)

interface CustomerRepository : CrudRepository&amp;#x3C;Customer, String&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&apos;s a typical application otherwise: we have a Spring Data repository, an entity, etc. We even use one of Spring&apos;s well-known &lt;code&gt;\*Template&lt;/code&gt; variants! The only thing exceptional here is that query in the &lt;code&gt;find()&lt;/code&gt; call where we say &lt;code&gt;Customer::name isEqualTo &quot;B&quot;&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Go with the Flow with Spring Integration&lt;/h2&gt;
&lt;p&gt;Spring Integration is one of the oldest SPring projects and offers a fit-for-purpose way to describe integration pipelines - we call them &lt;em&gt;flows&lt;/em&gt; - to act on events (we model them as &lt;code&gt;Mesasage&amp;#x3C;T&gt;&lt;/code&gt;s). These pipelines can have many operations, each chained together.  Spring Integration provides a lovely &lt;code&gt;IntegrationFlow&lt;/code&gt; DSL that uses context objects to provide the DSL. But, at least it feels much cleaner when expressed in Kotlin.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;package com.example.integration

import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.context.support.beans
import org.springframework.integration.dsl.integrationFlow
import org.springframework.integration.file.dsl.Files
import org.springframework.integration.file.transformer.FileToStringTransformer
import java.io.File

@SpringBootApplication
class IntegrationApplication

fun main(args: Array&amp;#x3C;String&gt;) {
    runApplication&amp;#x3C;IntegrationApplication&gt;(*args) {
        addInitializers(beans {
            bean {
                integrationFlow(
                    Files.inboundAdapter(File(&quot;/Users/jlong/Desktop/in&quot;)),
                    { poller { it.fixedDelay(1000) } }
                ) {
                    transform(FileToStringTransformer())
                    transform&amp;#x3C;String&gt; { it.uppercase() }
                    handle {
                        println(&quot;new message: ${it.payload}&quot;)
                    }
                }
            }
        })
    }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Does this inbound flow make sense to you? It says: scan the directory (my computer&apos;s &lt;code&gt;$HOME/Desktop/in&lt;/code&gt; folder) every 1000 milliseconds (a second), and when there&apos;s a new &lt;code&gt;java.io.File&lt;/code&gt; detected, pass it to the &lt;code&gt;transform&lt;/code&gt; operation, which will turn the &lt;code&gt;File&lt;/code&gt; into a &lt;code&gt;String&lt;/code&gt;. The &lt;code&gt;String&lt;/code&gt; is then sent to the next &lt;code&gt;transform&lt;/code&gt; operation, which uppercases the text. That uppercased text is then sent to the last operation, &lt;code&gt;handle&lt;/code&gt;, where I print out the uppercased text.&lt;/p&gt;
&lt;h2&gt;Easy Microproxies with Spring Cloud Gateway&lt;/h2&gt;
&lt;p&gt;Spring Cloud Gateway is one of my favorite Spring Cloud modules. It makes it trivial to handle cross-cutting concerns at the HTTP and service levels. There&apos;s also integration for things like GRPC and wesockets. It&apos;s pretty easy to understand: you use the &lt;code&gt;RouteLocatorBuilder&lt;/code&gt; to define &lt;code&gt;routes&lt;/code&gt;, which have predicates matching incoming requests. If they&apos;re matched, you can apply zero or more filters to the request before sending it to the final &lt;code&gt;uri&lt;/code&gt; you specify. It&apos;s a functional pipeline, so it shouldn&apos;t be surprising it expresses nicely in a Kotlin DSL. Let&apos;s look at an example.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot;&gt;
package com.example.gateway

import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder
import org.springframework.cloud.gateway.route.builder.filters
import org.springframework.cloud.gateway.route.builder.routes
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.http.HttpHeaders

@SpringBootApplication
class GatewayApplication

fun main(args: Array&amp;#x3C;String&gt;) {
    runApplication&amp;#x3C;GatewayApplication&gt;(*args)
}

@Configuration
class GatewayConfiguration {

    @Bean
    fun gateway(rlb: RouteLocatorBuilder) = rlb
        .routes {
            route {
                path(&quot;/proxy&quot;)
                filters {
                    setPath(&quot;/bin/astro.php&quot;)
                    addResponseHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, &quot;*&quot;)
                }
                uri(&quot;https://www.7timer.info/&quot;)
            }
        }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This example matches the request bound for &lt;code&gt;localhost:8080/proxy&lt;/code&gt; and forwards the request to a random open HTTP web service I found on the internet that is supposed to give you weather reports. I use the filter to augment the response, adding custom headers, &lt;code&gt;ACCESS_CONTROL_ALLOW_ORIGIN&lt;/code&gt;, to the response. Try it out in the browser, as I think the default response without any of the parameters is some binary data - an image.&lt;/p&gt;
&lt;h2&gt;Kotlin and Spring are a win-win&lt;/h2&gt;
&lt;p&gt;I&apos;ve only touched on some of the fantastic DSLs present in Spring and across the portfolio that provide new types to do the same things as were possible in the Java DSLs. There&apos;s also a whole host of existing libraries for which we&apos;ve written extension functions - essentially adding new paint onto old structures to make them more idiomatic for Kotlin developers. My favorite example of this is the &lt;code&gt;JdbcTemplate&lt;/code&gt;, which has been around in some form or another for 20+ years, yet it feels like it was written yesterday with Kotlin in mind!&lt;/p&gt;
&lt;p&gt;You can get started, as usual, by checking out the &lt;a href=&quot;https://start.spring.io&quot;&gt;Spring Initializer&lt;/a&gt;. Make sure to choose &lt;code&gt;Kotlin&lt;/code&gt; as your language. You can even ask for a Kotlin-language Gradle build, too!&lt;/p&gt;
&lt;p&gt;There are plenty of great (and mostly free) resources, &lt;a href=&quot;https://spring.io/guides&quot;&gt;including the guides&lt;/a&gt; - which  provide text-centric walkthroughs, and  the Spring Academy (which are video guided walkthroughs, and they even provide a path to certification!) introducing the various APIs and projects  we introduced in this blog, albeit in Java. Kotlin itself is a nice language and easy enough to learn. I&apos;ve got a ton of content over on my channel looking &lt;a href=&quot;https://youtube.com/@coffeesoftware&quot;&gt;at  Kotlin (and other things)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And of course, if you can swing the cash, we&apos;re having our big tentpole event, &lt;a href=&quot;https://www.vmware.com/explore/us.html&quot;&gt;SpringOne@VMWare Explore&lt;/a&gt;, this August in Las Vegas. Join us. The CFP is open &lt;a href=&quot;https://event.vmware.com/flow/vmware/explore2023lv/cfp/cfpHome&quot;&gt;until the end of March&lt;/a&gt;, too, so feel free to submit. We&apos;d love to see you in Las Vegas!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Spring Batch lead Mahmoud Ben Hassine on the latest and greatest in 2023]]></title><link>https://spring.io/blog/2023/03/16/a-bootiful-podcast-spring-batch-lead-mahmoud-ben-hassine-on-the-latest-and</link><guid isPermaLink="true">https://spring.io/blog/2023/03/16/a-bootiful-podcast-spring-batch-lead-mahmoud-ben-hassine-on-the-latest-and</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 16 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;iframe title=&quot;Spring Batch lead Mahmoud Ben Hassine on the latest and greatest in Spring Batch in 2023&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=5w9dz-13bbac6-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;A Bootiful Podcast&lt;/em&gt;! In this installment, &lt;a href=&quot;https://twitter.com/starbuxman&quot;&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to Spring Batch lead &lt;a href=&quot;https://twitter.com/FMBENHASSINE&quot;&gt;Mahmoud Ben Hassine (@FMBENHASSINE)&lt;/a&gt; about the latest and greatest in Spring Batch.&lt;/p&gt;
&lt;h2&gt;notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://event.vmware.com/flow/vmware/explore2023lv/cfp&quot;&gt;Submit your talk to SpringOne@Explore&lt;/a&gt;, being held August 21-24, 2023, in lovely Las Vegas, Nevada!&lt;/li&gt;
&lt;li&gt;I wrote an e-book looking at how to &lt;a href=&quot;https://tanzu.vmware.com/content/white-papers/spring-boot-3&quot;&gt;do AOT processing with Spring Boot 3 and GraalVM&lt;/a&gt;. It&apos;s free - and a fairly quick read - so get it while you can!&lt;/li&gt;
&lt;li&gt;I streamed this interview with Mahmoud live on my channel - &lt;a href=&quot;https://www.youtube.com/watch?v=0U7tdsQd14c&quot;&gt;you can watch it there&lt;/a&gt;, too, if you prefer&lt;/li&gt;
&lt;li&gt;I wrote a blog looking at some of the &lt;a href=&quot;https://spring.io/blog/2023/03/16/kotlin-dsls-in-the-world-of-springdom&quot;&gt;amazing Kotlin DSLs in the wide and wonderful world of Spring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I did a video &lt;a href=&quot;https://www.youtube.com/watch?v=Y2gZz8-yK7Y&quot;&gt;introducing Spring Boot 3 over on the Jetbrains IntelliJ IDEA Youtube channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring Tools 4.18.0 released]]></title><link>https://spring.io/blog/2023/03/15/spring-tools-4-18-0-released</link><guid isPermaLink="true">https://spring.io/blog/2023/03/15/spring-tools-4-18-0-released</guid><dc:creator><![CDATA[Martin Lippert]]></dc:creator><pubDate>Wed, 15 Mar 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;I am happy to announce the 4.18.0 release of the Spring Tools 4 for Eclipse, Visual Studio Code, and Theia.&lt;/p&gt;
&lt;h4&gt;updates to the Spring Tools 4 for Eclipse distribution&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;updated to Eclipse 2023-03 release (&lt;a href=&quot;https://eclipseide.org/release/noteworthy/&quot;&gt;new and noteworthy&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;important highlights&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot):&lt;/em&gt; new and vastly improved content-assist for Spring Data repository query methods (thanks to contributions from @danthe1st)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot):&lt;/em&gt; the additional reconciling of Spring Boot projects to show Spring specific validations, outdated versions and more, now reports progress, runs faster, and uses less memory - please consider using this and tell us about your experiences and if you hit issues while having this feature enabled&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(VSCode):&lt;/em&gt; fixed an extremely annoying issue that caused regular Java content-assist in VSCode to stop working after a short while&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Eclipse):&lt;/em&gt; a bug in m2e got fixed and is included in this release, which caused resource files (e.g. &lt;code&gt;application.properties&lt;/code&gt;) to not be copied into the target folder anymore. This works again and automatically copies your changed &lt;code&gt;application.properties&lt;/code&gt; file to the target folder, so that those changes are taken into account when running the project automatically again&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Detailed changes can be found in the release notes: &lt;a href=&quot;https://github.com/spring-projects/sts4/releases/tag/4.18.0.RELEASE&quot;&gt;https://github.com/spring-projects/sts4/releases/tag/4.18.0.RELEASE&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;downloads&lt;/h4&gt;
&lt;p&gt;To download the distribution for Eclipse and find links to the marketplace entries for Visual Studio Code and Theia, please go visit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Tools 4: &lt;a href=&quot;https://spring.io/tools/&quot;&gt;https://spring.io/tools/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spring Tools 4.18.1 is scheduled to be released in late April 2023.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content:encoded></item></channel></rss>